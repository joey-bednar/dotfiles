- name: Install Dependencies
  become: true
  ansible.builtin.apt:
    name:
      - curl
      - ca-certificates
    state: present
  tags:
    - docker

- name: Check if docker GPG key exists
  ansible.builtin.stat:
    path: "/etc/apt/keyrings/docker.asc"
  register: gpg_status
  tags:
    - docker

- name: Add Docker official GPG key
  become: true
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc
  when: not gpg_status.stat.exists
  changed_when: not gpg_status.stat.exists
  tags:
    - docker

- name: Check if Docker repo in apt sources
  ansible.builtin.stat:
    path: "/etc/apt/sources.list.d/docker.list"
  register: apt_sources_status
  tags:
    - docker

- name: Add Docker repository to apt sources # noqa risky-shell-pipe
  become: true
  ansible.builtin.shell: |
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
  when: not apt_sources_status.stat.exists
  changed_when: not apt_sources_status.stat.exists
  tags:
    - docker

- name: Update cache
  become: true
  ansible.builtin.apt:
    force_apt_get: true
    update-cache: true
    state: present
  tags:
    - docker

- name: Install Docker Engine
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  tags:
    - docker

- name: Create docker group
  become: true
  ansible.builtin.group:
    name: docker
    state: present
  tags:
    - docker

- name: Add user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ username }}"
    groups: docker
    append: true
  tags:
    - docker
